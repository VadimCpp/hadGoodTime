const Bot = require('node-telegram-bot-api');
const db = require('./levelDb');
const state = require('./state');

const token = process.env.BOT_ACCESS_TOKEN;

let bot = new Bot(token, { polling: true });

const startHandler = async (chatId, coffer) => {
  coffer.state = state.ENTER_NAME;
  await db.putCoffer(chatId, coffer);
  bot.sendMessage(chatId, "–î–∞–≤–∞–π—Ç–µ –ø–æ—Å—á–∏—Ç–∞–µ–º –≤–∫–ª–∞–¥ –∫–∞–∂–¥–æ–≥–æ –≤ –æ–±—â–∏–π –∫–æ—Ç—ë–ª. –í–≤–µ–¥–∏—Ç–µ –∏–º—è.");
};

const resetHandler = async (chatId, coffer) => {
  coffer.state = state.ENTER_NAME;
  await db.putCoffer(chatId, coffer);
  bot.sendMessage(chatId, "–ù–∞—á–Ω—ë–º —Å—á–∏—Ç–∞—Ç—å —Å –Ω–∞—á–∞–ª–∞. –í–≤–µ–¥–∏—Ç–µ –∏–º—è.");
};

const messageHandler = async (chatId, text, coffer) => {
  coffer = await db.getCoffer(chatId);

  if (coffer.state === state.ENTER_NAME) {
    coffer.name = text;
    coffer.state = state.ENTER_EXPENSES;
    bot.sendMessage(chatId, "–û—Ç–ª–∏—á–Ω–æ! –°–∫–æ–ª—å–∫–æ –≤–Ω—ë—Å " + coffer.name + "?");
    await db.putCoffer(chatId, coffer);
    return;
  }

  if (coffer.state === state.ENTER_EXPENSES) {
    if (isNaN(text) || text < 0) {
      bot.sendMessage(chatId, "–ß–∏—Å–ª–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏–ª–∏ –º–µ–Ω—å—à–µ –Ω—É–ª—è.");
      return;
    }
    coffer.expenses = text;
    coffer.clients.push({name: coffer.name, expenses: coffer.expenses});
    coffer.state = state.ENTER_NAME;
    await db.putCoffer(chatId, coffer);
    await bot.sendMessage(chatId, "–¢–∞–∫ –∏ –∑–∞–ø–∏—à–µ–º: " + coffer.name + " –≤–Ω—ë—Å " + coffer.expenses +
      "\n –ö—Ç–æ –¥–∞–ª–µ–µ –ø–æ —Å–ø–∏—Å–∫—É?");
  }
};

console.log('Bot server started in the ' + process.env.NODE_ENV + ' mode');

// Listen for any kind of message. There are different kinds of
// messages.
bot.on('message', (msg) => {

  console.log('\nüì∞  Received message:');
  console.log('  ', msg.text || '(no text)');

  /**
   *
   * @type {{state: number, name: string, expenses: string, clients: Array}}
   */
  let coffer = {
    state: 0,
    name: '',
    expenses: '',
    clients: []
  };

  if (msg.text) {
    /**
     * @type {string}
     */
    const text = msg.text;

    /**
     * @type {Array}
     */
    const args = text.split(" ");

    const chatId = msg.chat.id;

    if (args[0] === '/start') {
      startHandler(chatId, coffer);

    } else if (args[0] === '/reset') {
      resetHandler(chatId, coffer);

    } else {
      messageHandler(chatId, text, coffer);
    }
  }
});

module.exports = bot;